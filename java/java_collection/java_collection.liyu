

一.集合用于存储数据的容器，对象封装数据，集合存储对象。
	 
	1.数组集合异同
	 数组长度不可变，集合可变。
	 集合只能存储引用类型。数组基本类型和引用类型都可存储。
	 数组存储元素必须同一类型。集合可以是不同类型。
	 
	 
	 数据结构：容器中数据存储的方式。
	 
	 
	 
	 2.常用集合类
		 1.Collection接口的子接口包括：Queue、Set接口和List接口
		 2.Set接口的实现类主要有：HashSet、TreeSet、LinkedHashSet等
		 3.List接口的实现类主要有：ArrayList、LinkedList、Stack以及Vector等
		 4.Map接口的实现类主要有：HashMap、TreeMap、Hashtable、ConcurrentHashMap以及Properties等
		 
	 3.List，set区别
		 List：  有序(存入和抽取顺序)容器，元素可重复，可以插入多个null元素，元素都有索引。
			     常用实现类有 ArrayList、LinkedList、 Vector。
				 
				 底层数据结构：
					 Arraylist：object数组,查询快，增删慢，线程不安全，效率高，可以存储重复元素
					 
					 LinkeList：双向循环表,查询慢，增删快，线程不安全，效率高，可以存储重复元素
					 
					 vecter：object数组,查询快，增删慢，线程安全，效率低，可以存储重复元素
					 
					 
					 
					 
					 
				 
		 Set：   无序容器，不可存储重复元素，只允许一个null元素，必须保证唯一性。
				 常用实现类是 HashSet、LinkedHashSet、 TreeSet
				 
				 底层数据结构：
					 HashSet(无序唯一)：底层基于hashmap实现，元素无序且唯一，线程不安全，效率高，
										可以存储null元素，元素的唯一性是靠所存储元素类型是否重写
										hashCode()和equals()方法来保证的，如果没有重写这两个方法，
										则无法保证元素的唯一性
										
										hashCode相等,储存对象不一定相等，再通过equals方法判断，内容相等
										是同一对象。
										
					 LinkedHashSet:  继承与 HashSet，双向链表保证了元素的顺序与存储顺序一致，
									 哈希表保证了元素的唯一性
									 
									 线程不安全，效率高
									 
									 
					 TreeSet(有序唯一):	红黑树，有序唯一。构造方法不同，分为自然排序（无参构造，实现Compareable）
										和比较器排序（有参构造）
				 
		
		 map：   键值对集合，存储键值之间映射。key无序唯一，value不要求有序允许重复。
				 检索元素时，只要给出键对象，就会返回对应的值对象
				 常用实现类：HashMap、TreeMap、HashTable、LinkedHashMap、ConcurrentHashMap
				 
				 
				 
				 
	
	
	
		